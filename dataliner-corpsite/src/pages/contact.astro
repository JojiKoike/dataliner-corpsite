---
import BaseLayout from '../layouts/BaseLayout.astro';

const RECAPTCHA_SITE_KEY = import.meta.env.RECAPTCHA_SITE_KEY;
---

<BaseLayout title="Contact" description="お問い合わせページ">
  <div class="flex min-h-screen items-center justify-center bg-gray-100 px-4">
    <form
      id="form"
      class="w-full max-w-lg rounded-lg bg-white p-6 shadow-md md:max-w-2xl md:p-8"
      aria-labelledby="form-title"
      role="form"
    >
      <!-- Form Title -->
      <h2
        id="form-title"
        class="mb-6 text-center text-2xl font-bold text-gray-700 md:text-3xl"
      >
        Contact Us
      </h2>

      <!-- Name Field -->
      <div class="mb-6">
        <label for="name" class="mb-2 block text-lg font-medium text-gray-700">
          Name <span class="text-red-500">*</span>
        </label>
        <input
          type="text"
          id="name"
          name="name"
          class="w-full rounded-lg border px-5 py-3 text-base focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-400 md:text-lg"
          placeholder="Your Name"
          aria-required="true"
          required
        />
      </div>

      <!-- Email Field -->
      <div class="mb-6">
        <label for="email" class="mb-2 block text-lg font-medium text-gray-700">
          Email <span class="text-red-500">*</span>
        </label>
        <input
          type="email"
          id="email"
          name="email"
          class="w-full rounded-lg border px-5 py-3 text-base focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-400 md:text-lg"
          placeholder="Your Email"
          aria-required="true"
          required
        />
      </div>

      <!-- Message Field -->
      <div class="mb-6">
        <label
          for="message"
          class="mb-2 block text-lg font-medium text-gray-700"
        >
          Message <span class="text-red-500">*</span>
        </label>
        <textarea
          id="message"
          name="message"
          rows="6"
          class="w-full rounded-lg border px-5 py-3 text-base focus:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-400 md:text-lg"
          placeholder="Your Message"
          aria-required="true"
          required></textarea>
      </div>

      <!-- Buttons -->
      <div
        class="flex flex-col items-stretch gap-4 sm:flex-row sm:items-center sm:justify-between"
      >
        <button
          type="submit"
          class="w-full rounded-lg bg-blue-500 px-8 py-4 text-base text-white transition hover:bg-blue-600 sm:w-auto md:text-lg"
          aria-label="Submit the form"
        >
          Submit
        </button>
        <button
          type="reset"
          class="w-full rounded-lg bg-gray-200 px-8 py-4 text-base text-gray-700 transition hover:bg-gray-300 sm:w-auto md:text-lg"
          aria-label="Clear all form fields"
        >
          Cancel
        </button>
      </div>
    </form>
  </div>
</BaseLayout>

<script
  is:inline
  src={`https://www.google.com/recaptcha/api.js?render=${RECAPTCHA_SITE_KEY}&hl=ja`}
></script>
<script>
  const form = document.getElementById('form');
  form?.addEventListener('submit', submitFormData);
  const RECAPTCHA_SITE_KEY = import.meta.env.RECAPTCHA_SITE_KEY;

  function submitFormData(event: Event) {
    event.preventDefault();
    grecaptcha.ready(() => {
      grecaptcha
        .execute(RECAPTCHA_SITE_KEY, {
          action: 'submit',
        })
        .then(async (token: string) => {
          const target = event.target as typeof event.target & {
            name: { value: string };
            email: { value: string };
            message: { value: string };
          };

          const data = {
            name: target.name.value,
            email: target.email.value,
            message: target.message.value,
            googleReCaptchaToken: token,
          };

          const formData = new FormData();
          Object.entries(data).forEach(([key, value]) => {
            formData.append(key, value);
          });

          await sendRequest(formData);
        });
    });
  }

  async function sendRequest(formData: FormData) {
    const NEWT_FORM_UID = import.meta.env.NEWT_FORM_UID;
    return await fetch(
      `https://data-liner-com.form.newt.so/v1/${NEWT_FORM_UID}`,
      {
        method: 'POST',
        body: formData,
        headers: {
          Accept: 'application/json',
        },
      }
    );
  }
</script>
